version: '3'

volumes:
  data-gravitee-elasticsearch:
    driver: local
  data-gravitee-mongo:
    driver: local
  data-app-mongo:
    driver: local
  secrets-app-kafka:
    driver: local
  data-app-kafka:
    driver: local
  secrets-app-zookeeper:
    driver: local
  data-app-zookeeper:
    driver: local
  log-app-zookeeper:
    driver: local

services:

  # Custom Application

  app-mongodb:
    image: mongo:${MONGODB_VERSION:-latest}
    container_name: app-mongodb
    restart: always
    volumes:
      - data-app-mongo:/data/db
      - ./logs/app-mongodb:/var/log/mongodb
    ports:
      - "27018:27017"

  app-backend:
    build: ./backend
    container_name: app-backend
    ports:
      - "3001:3001"
    depends_on:
      - app-mongodb
      - gateway
      - app-kafka-broker
    environment:
      - DATABASE_HOST=app-mongodb

  app-frontend:
    build: ./frontend
    container_name: app-frontend
    ports:
      - "5173:5173"
    depends_on:
      - app-backend

  app-kafka-broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: app-kafka-broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9092,INTERNAL://app-kafka-broker:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - secrets-app-kafka:/etc/kafka/secrets
      - data-app-kafka:/var/lib/kafka/data
    restart: on-failure

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - data-app-zookeeper:/var/lib/zookeeper/data
      - secrets-app-zookeeper:/etc/zookeeper/secrets
      - log-app-zookeeper:/var/lib/zookeeper/log

  # Gravitee

  mongodb:
    image: mongo:${MONGODB_VERSION:-5}
    container_name: gio-mongodb
    restart: always
    volumes:
      - data-gravitee-mongo:/data/db
      - ./logs/apim-mongodb:/var/log/mongodb
    ports:
      - "27017:27017"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-7.17.8}
    container_name: gio-elasticsearch
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9200/_cat/health?h=st"
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - data-gravitee-elasticsearch:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 65536

  gateway:
    image: graviteeio/apim-gateway:${APIM_VERSION:-latest}
    container_name: gio-gateway
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - ./logs/apim-gateway:/opt/graviteeio-gateway/logs
    environment:
      - gravitee_api_jupiterMode_enabled=true
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_ratelimit_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_reporters_elasticsearch_endpoints_0=http://elasticsearch:9200

  management_api:
    image: graviteeio/apim-management-api:${APIM_VERSION:-latest}
    container_name: gio-management-api
    restart: always
    ports:
      - "8083:8083"
    links:
      - mongodb
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - ./logs/apim-management-api:/opt/graviteeio-management-api/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_analytics_elasticsearch_endpoints_0=http://elasticsearch:9200

  management_ui:
    image: graviteeio/apim-management-ui:${APIM_VERSION:-latest}
    container_name: gio-management-ui
    restart: always
    ports:
      - "8084:8080"
    depends_on:
      - management_api
    environment:
      - MGMT_API_URL=http://localhost:8083/management/organizations/DEFAULT/environments/DEFAULT/
    volumes:
      - ./logs/apim-management-ui:/var/log/nginx

  portal_ui:
    image: graviteeio/apim-portal-ui:${APIM_VERSION:-latest}
    container_name: gio-portal-ui
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - management_api
    environment:
      - PORTAL_API_URL=http://localhost:8083/portal/environments/DEFAULT
    volumes:
      - ./logs/apim-portal-ui:/var/log/nginx
